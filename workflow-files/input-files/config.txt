*****************************************************************************************************************************************************************
**************************************************************************   General   **************************************************************************
*****************************************************************************************************************************************************************

# Notes
# The symbol '#' can be used in for line and trailing comments, but not in file/folder names or commands

workflow_id=A
# Used within the socket names as well as the job names in the batchsystem to avoid clashes between parallel running instances of hyper-Q.
# In particular relevant for the batchsystem, for the socket-files a time-stamp mechanism is used as additional protection mechanism.
# Should be an upper case letter (to be more easy to distinguish from the job type letter (JTL) used in the HQ job files)

verbosity_runtime=debug
# Possible values: standard, debug
# This option mainly effects the screen output and the logfiles

verbosity_preparation=standard
# Possible values: standard, debug
# This option affects the preparation scripts for setting up the basic workflow files (before the workflow is running)

temperature=298
# In Kelvin
# Used during all simulations and calculations where a temperature is needed (i.e. EQ, MD, FEC)
# Input files for the simulations are adjusted automatically by replacing the term 'temperature_placeholder'



*****************************************************************************************************************************************************************
*******************************************************************   Structure Preparation   *******************************************************************
*****************************************************************************************************************************************************************

**************************************************************************** General ****************************************************************************

input_file_format=smi
# Currently supported are smi, pdbqt, sdf, mol2_2d_h, pdb_3d_h
# The format should be in lowercase letters
# If the subsystem is RLS, then the coordinates of the ligands have to be provided in the input files to suit the coordinates of the receptor.
# Ligand names should not contain the underscore "_" letter
# Resname doesn't matter for the ligand, it will be changed to LIG, as well as the chain which will be set to L

receptor_mode=common
# Possible values: individual, common
# If individual, then a receptor has to be in the receptor folder for each ligand with the same name as the ligand
# Only needed if the subsystem includes a receptor (e.g. RLS)

receptor_basename=
# Only required if receptor_mode=common and if the simulations include a receptor (e.g. RLS)

receptor_type=P
# Possible values: P (protein), H (Host)
# Only required if the simulations include a receptor (e.g. RLS)

box_edge_length_L=10
waterbox_padding_size_LS=10
waterbox_padding_size_RLS=10

ligand_FFparameter_source=MATCH
# Possible choices: folder, MATCH
# If set to folder, then in the folder input-files/ligands/FF there need to be the files for each ligand:
#   * ligand_name.rtf
#   * ligand_name.prm
# The prm files need to have a proper END statement at the end of the file

receptor_FFparameter_source=MATCH
# Possible choices: folder, MATCH
# If set to folder, then in the folder input-files/receptor there need to be for each receptor (common or all the individual ones) the following files:
#   * receptorname.pdb
#   * receptorname.rtf
#   * receptorname.prm
# The prm files need to have a proper END statement at the end of the file


***************************************************************************** LOMAP *****************************************************************************

lomap_mol2_folder=mol2-Li
# For lomap, relative path name w.r.t. to input-files/ligands

draw_pairwise_mcs=false
# Possible values: false or true (case insensitive)

lomap_ncpus=6

mcs_time=1
# The time which lomap can take for finding the MCS (maximal common substructure) per molecule-pair



*****************************************************************************************************************************************************************
************************************************************   Simulation Settings (OPT, EQ, MD, CE)  ***********************************************************
*****************************************************************************************************************************************************************

**************************************************************************** General ****************************************************************************

opt_programs_L=cp2k
opt_programs_LS=cp2k
opt_programs_RLS=cp2k
# possible: cp2k

opt_type_L=MM
opt_type_LS=MM
opt_type_RLS=MM
# Possible values: MM, QM, QMMM
# Currently obsolete

eq_programs_L=cp2k
eq_programs_LS=cp2k
eq_programs_RLS=cp2k
# possible: cp2k

eq_type_L=MM
eq_type_LS=MM
eq_type_RLS=MM
# Possible values: MM, QM, QMMM
# Currently obsolete

md_programs_L=ipi-cp2k
md_programs_LS=ipi-cp2k
md_programs_RLS=ipi-cp2k
# Possible values: ipi-cp2k, ipi-cp2k-iqi
# Will also be used for the CE (due to the restart files requiring the same clients)

md_type_L=MM
md_type_LS=MM
md_type_RLS=MM
# Possible values: QMMM, MM, QM
# Currently obsolete

ce_type_L=MM
ce_type_LS=MM
ce_type_RLS=MM
# If umbrella_sampling=false, then this setting should be the same as md_type (since the MD files are copied)
# Possible values: QMMM, MM, QM
# Currently obsolete

tdcycle_type=lambda
# Possible options: hq, lambda
# If using lamdba, use the same input file for cp2k with the ending lamdba in the variables below for cp2k, for both the k_0 and k_1 files

tdw_count=1
# The total number of thermodynamic windows
# Minimal value: 1

nbeads=1
# Total number of path integral beads per particle
# Minimum value: 1
# Is only relevant for MD simulations and CE

opt_timeout_L=100
opt_timeout_LS=100
opt_timeout_RLS=100
# Unit: seconds
# This value is used to detect whether the optimization is completed by checking if the file is still changing or not, 
# because sometimes a program (in particular CP2K is done but the program doesn't terminate)

eq_timeout_L=100
eq_timeout_LS=100
eq_timeout_RLS=100
# Unit: seconds
# This value is used to detect whether the equilibration is completed by checking if the file is still changing or not,
# because sometimes a program (in particular CP2K is done but the program doesn't terminate)

md_timeout_L=100
md_timeout_LS=500
md_timeout_RLS=1000
# Here should be taken into account that between the start of i-pi and CP2K there can be a time delay of a few seconds (usually around 5 seconds)
# Timeout starts counting after CP2K (and possibly iqi) has been started

ce_timeout_L=30
ce_timeout_LS=100
ce_timeout_RLS=100
# Here should be taken into account that between the start of i-pi and CP2K there can be a time delay of a few seconds (usually around 5 seconds)
# Timeout starts counting after CP2K (and possibly iqi) has been started

opt_continue=true
# Possible values (case insensitive): true, false
# If true, then
#   * during _pro_
#       * non-existent TDS-folders will be newly created
#       * and existing TDS-folders which contain already restart files will be prepared for the next run provided the there are no opt-pp-files for this TDS yet, in which case it will be skipped
#       * the general MSP folder will only be newly prepared if at least one of the files system.a1c1.[uc]_atoms is present
#   * during _rop_
#       * the simulation will only be started if there are no opt-pp-files yet for this TDS
#   * during _ppo_
#       * the pp  will only be carried out if there are no opt-pp-files yet for this TDS
# If false, then
#   * during _pro_
#       * the opt/msp_name/subsystem general folder will be newly prepared
#       * each TDS folder will be newly prepared (and wiped if existent)
# If the input files have changed and should be updated, this setting should be set either to false, otherwise one needs to delete the folders which should be newly prepared

eq_continue=true
# Details: Same as for opt_continue

md_continue=true
# Possible values (case insensitive): true, false 
# If true, then during _prm_ non-existent MD-folders will be newly created, and existing ones which have already ipi restart files will be prepared for the next run (without deleting the previous runs)
# If false, then the md/msp_name/subsystem will be newly prepared (and will be wiped if already existent)
# If the input files have changed and should be updated, this setting should be set either to false, otherwise one needs to delete the folders which should be newly prepared
# This setting has mainly effects on _prm_, only very few on _rmd_

ce_continue=true
# Possible values (case insensitive): true, false 
# If true, then * during _rce_ snapshots will be skipped for which the file ipi.out.properties already exists and contains a line with property values
#               * during _prc_ only snapshots will be prepared which are not already prepared (e.g. no finished snapshots will be overwritten)
# If false, then * during _rce_ every snapshot will be computed regardless of whether they have been computed before or not
#                * during _prc_ all snapshots will be newly prepared (and the ce/msp_name/subsystem folder will be wiped if already existent)
# If the input files have changed and should be updated, this setting should be set either to false, otherwise one needs to delete the folders which should be newly prepared

umbrella_sampling=false
# Possible values: true, false
# Will be used during cross_evaluation and the free energy computations
# Requires the following settings: 

cell_dimensions_scaling_factor_L=2
cell_dimensions_scaling_factor_LS=2
cell_dimensions_scaling_factor_RLS=2
# This value will be used for the variables cell_dimensions_scaled_rounded and cell_dimensions_scaled_odd_rounded in the simulation software input files (e.g. cp2k)


****************************************************************************** CP2K *****************************************************************************

# At least one of the two CP2K input folders for each GEO_OPT, EQ, MD and CE has to contain the following files:
# When used for GEO_OPT:
# * main.opt.lambda
# * main.opt.k_0
# * main.opt.k_1
# When used for EQ:
# * main.eq.lambda
# * main.eq.k_0
# * main.eq.k_1
# When used for MD simulations:
# * main.ipi.lambda
# * main.ipi.k_0
# * main.ipi.k_1
# Optional for GEO_OPT, EQ, MD, and CE are files of the form sub.*
# Possible variables in the cp2k input files: cell_dimensions_full_rounded, cell_dimensions_half_rounded, cell_dimensions_odd_rounded, subconfiguration, lambda_value

# Ligand (L) input folder
inputfolder_cp2k_opt_general_L=hqf.general.type1
inputfolder_cp2k_eq_general_L=hqf.general.type1
inputfolder_cp2k_md_general_L=hqf.general.type1
inputfolder_cp2k_ce_general_L=hqf.general.type1
inputfolder_cp2k_opt_specific_L=hqf.specific.MM
inputfolder_cp2k_eq_specific_L=hqf.specific.MM
inputfolder_cp2k_md_specific_L=hqf.specific.MM
inputfolder_cp2k_ce_specific_L=hqf.specific.MM

# Ligand, solvent (LS) input folder
inputfolder_cp2k_opt_general_LS=hqf.general.type1
inputfolder_cp2k_eq_general_LS=hqf.general.type1
inputfolder_cp2k_md_general_LS=hqf.general.type1
inputfolder_cp2k_ce_general_LS=hqf.general.type1
inputfolder_cp2k_opt_specific_LS=hqf.specific.MM
inputfolder_cp2k_eq_specific_LS=hqf.specific.MM
inputfolder_cp2k_md_specific_LS=hqf.specific.MM
inputfolder_cp2k_ce_specific_LS=hqf.specific.MM

# Protein, ligand, solvent (RLS) input folder
inputfolder_cp2k_opt_general_RLS=hqf.general.type1
inputfolder_cp2k_eq_general_RLS=hqf.general.type1
inputfolder_cp2k_md_general_RLS=hqf.general.type1
inputfolder_cp2k_ce_general_RLS=hqf.general.type1
inputfolder_cp2k_opt_specific_RLS=hqf.specific.MM
inputfolder_cp2k_eq_specific_RLS=hqf.specific.MM
inputfolder_cp2k_md_specific_RLS=hqf.specific.MM
inputfolder_cp2k_ce_specific_RLS=hqf.specific.MM

cp2k_command=cp2k-5.1.sopt
#cp2k-5.1.sopt
#cp2k_command=/home/wagner/cgorgulla/Dropbox/Software/installed/bin/cp2k.ssmp 
#cp2k_command=/programs/x86_64-linux/cp2k/4.1/exe/Linux-x86-64-gfortran/cp2k.ssmp
#cp2k_command=/nmr/programs/cp2k-4.1/cp2k.popt


****************************************************************************** i-PI *****************************************************************************

# Ligand (L) input files
inputfile_ipi_md_L=ipi.in.md.nvt.xml
inputfile_ipi_ce_L=ipi.in.ce.cp2k.xml

# Ligand, solvent (LS) input files
inputfile_ipi_md_LS=ipi.in.md.nvt.xml
inputfile_ipi_ce_LS=ipi.in.ce.cp2k.xml

# Protein, ligand, solvent (RLS) input files
inputfile_ipi_md_RLS=ipi.in.md.nvt.xml
inputfile_ipi_ce_RLS=ipi.in.ce.cp2k.xml

ipi_set_randomseed=true
# Possible values: true, false
# Replaces the seed of the prng in the i-pi input files with a random number


****************************************************************************** i-QI *****************************************************************************

# Ligand (L) input files
inputfile_iqi_md_L=
inputfile_iqi_constraints_L=
# Normally not needed because iqi is usually not used for L only simulations

# Ligand, solvent (LS) input files
inputfile_iqi_md_LS=iqi.in.LS.xml
inputfile_iqi_constraints_LS=iqi.in.sub.constraints.LS.xml

# Protein, ligand, solvent (RLS) input files
inputfile_iqi_md_RLS=iqi.in.RLS.xml
inputfile_iqi_constraints_RLS=iqi.in.sub.constraints.RLS.xml


************************************************************************* MD Simulations ************************************************************************

md_stride_L=1000
md_stride_LS=500
md_stride_RLS=100
# The stride w.r.t. the time steps during the MD simulations when snapshot files are written out for the later CEs
# Input files for the simulations are adjusted automatically by replacing the term 'stride_md_placeholder'


*********************************************************************** Cross-Evaluations ***********************************************************************

ce_first_restart_ID_L=1
ce_first_restart_ID_LS=1
ce_first_restart_ID_RLS=1
ce_stride_L=1
ce_stride_LS=1
ce_stride_RLS=1
# The stride which is applied before carrying out the crossevaluation of the snapshots, i.e. only every <stride_ce>th restart file of ipi from the MD simulations is used for the CEs
# The restart files are indexed starting at one (1, 2, 3, ...)


****************************************************************************** FEC ******************************************************************************

fec_first_snapshot_index_L=10
fec_first_snapshot_index_LS=10
fec_first_snapshot_index_RLS=10
fec_stride_L=1
fec_stride_LS=1
fec_stride_RLS=1
# The stride which is applied before carrying out the FEC, i.e. only every <stride_fec>th snapshots of the cross evaluation is used
# The snapshot folder in the cross evaluation folders are indexed starting by 1

C_absolute_tolerance=1
delta_F_min=-10000
delta_F_max=10000


************************************************************************ Parallelization ************************************************************************

ncpus_cp2k_opt_L=1
ncpus_cp2k_opt_LS=1
ncpus_cp2k_opt_RLS=1
ncpus_cp2k_eq_L=1
ncpus_cp2k_eq_LS=1
ncpus_cp2k_eq_RLS=1
ncpus_cp2k_md_L=1
ncpus_cp2k_md_LS=1
ncpus_cp2k_md_RLS=1
ncpus_cp2k_ce_L=1
ncpus_cp2k_ce_LS=1
ncpus_cp2k_ce_RLS=1

fes_opt_parallel_max_L=10
fes_opt_parallel_max_LS=10
fes_opt_parallel_max_RLS=10
fes_eq_parallel_max_L=10
fes_eq_parallel_max_LS=10
fes_eq_parallel_max_RLS=10
fes_md_parallel_max_L=10
fes_md_parallel_max_LS=10
fes_md_parallel_max_RLS=10
fes_ce_parallel_max_L=10
fes_ce_parallel_max_LS=10
fes_ce_parallel_max_RLS=10

command_prefix_bs_subjob=srun -N 1 -n 1
# Cray/HLRN: aprun -cc none -n 1
# Slurm: srun -N 1 -n 1
command_prefix_bs_task=bash
command_prefix_gen_run_one_pipe_sub=bash
command_prefix_opt_run_one_opt=bash
command_prefix_eq_run_one_eq=bash
command_prefix_md_run_one_md=bash
command_prefix_ce_run_one_snapshot=bash
# Can contain spaces, e.g. options to the prefix command
# Common prefixes are: bash, aprun, setsid, ...
# Should not be empty. 'bash' can be used if no other prefix is needed for a bash script for instance
# setsid ist not needed for command_prefix_bs_task, because the tasks are automatically run in their own process groups and setsid would therefore not have much effect


************************************************************************** Batchsystem **************************************************************************

batchsystem=slurm
# Supported: lsf, slurm, sge, mtp (for moab/torque/pbs)

tasks_parallel_delay_time=10
# Possible values: Non-negative integer
# Unit: Seconds
# Summary:  The waiting time before the next task of the same subjob file is started. This is useful if different tasks are preparing files in the same directory
#           (usually common files for the same MSP) to avoid race conditions which can cause HyperQ to fail
#           The value is used during the job creation with hq_bs_prepare_jobfiles.sh
# Recommended value: At least 10 seconds

minimum_task_time=10
# Possible values: Positive integer
# Unit: Seconds
# If the runtime of the tasks of a subjob is less than the minimum_task_time for at least one of the tasks, an internal error is raised.
# The task_parallel_delay_time is not counted as runtime of the tasks
# Recommended value: 10 seconds