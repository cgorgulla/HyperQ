*****************************************************************************************************************************************************************
**************************************************************************   General   **************************************************************************
*****************************************************************************************************************************************************************

# Notes
# The symbol '#' can be used in for line and trailing comments, but not in file/folder names or commands

workflow_id=A
# Used within the socket names as well as the job names in the batchsystem to avoid clashes between parallel running instances of hyper-Q.
# In particular relevant for the batchsystem, for the socket-files a time-stamp mechanism is used as additional protection mechanism.
# Up to 50 characters are supported (provided the job IDs have less than 10 digits). The first character should be an alphabetic letter (required by some batchsystems)

verbosity_runtime=standard
# Possible values: standard, debug
# This option mainly effects the screen output and the logfiles

verbosity_nonruntime=standard
# Possible values: standard, debug
# This option affects the preparation scripts for setting up the basic workflow files (before the workflow is running)

temperature=298
# In Kelvin
# Used during all simulations and calculations where a temperature is needed (i.e. EQ, MD, FEC)
# Input files for the simulations are adjusted automatically by replacing the term 'temperature_placeholder'



*****************************************************************************************************************************************************************
*******************************************************************   Structure Preparation   *******************************************************************
*****************************************************************************************************************************************************************

**************************************************************************** General ****************************************************************************

input_file_format=smi
# Currently supported are smi, pdbqt, sdf, mol2_2d_h, pdb_3d_h
# The format should be in lowercase letters
# If the subsystem is RLS, then the coordinates of the ligands have to be provided in the input files to suit the coordinates of the receptor.
# Ligand names should not contain the underscore "_" letter
# Resname doesn't matter for the ligand, it will be changed to LIG, as well as the chain which will be set to L

receptor_mode=common
# Possible values: individual, common
# If set to 'individual', then a receptor has to be in the receptor folder for each ligand with the same name as the ligand
# Only needed if the subsystem includes a receptor (e.g. RLS)

receptor_basename=
# Only required if receptor_mode=common and if the simulations include a receptor (e.g. RLS)
# If receptor_FFparameter_source=folder, then there is no need to include in the receptor filenames the words 'unique' or 'typed'. This is assumed implicitly, and filenames including these terms will be created.

receptor_type=P
# Possible values: P (Protein), H (Host)
# Only required if the simulations include a receptor (e.g. RLS)

box_edge_length_L=10
waterbox_padding_size_LS=10
waterbox_padding_size_RLS=10

ligand_FFparameter_source=MATCH
# Possible choices: folder, MATCH
# If set to folder, then in the folder input-files/ligands/FF there need to be the files for each ligand:
#   * ligand_name.rtf
#   * ligand_name.prm
# The prm files need to have a proper END statement at the end of the file

receptor_FFparameter_source=MATCH
# Possible choices: folder, MATCH
# Only relevant if receptor_type=H
# If set to folder, then in the folder input-files/receptor there need to be for each receptor (common or all the individual ones) the following files:
#   * receptorname.pdb
#   * receptorname.rtf
#   * receptorname.prm
# The prm files need to have a proper END statement at the end of the file
# If receptor_FFparameter_source=folder, then there is no need to include in the receptor filenames the words 'unique' or 'typed'. This is assumed implicitly, and filenames including these terms will be created.


***************************************************************************** LOMAP *****************************************************************************

lomap_mol2_folder=mol2-Li
# For lomap, relative path name w.r.t. to input-files/ligands

draw_pairwise_mcs=false
# Possible values: false or true (case insensitive)

lomap_ncpus=6

mcs_time=1
# The time which lomap can take for finding the MCS (maximal common substructure) per molecule-pair



*****************************************************************************************************************************************************************
************************************************************   Simulation Settings (OPT, EQ, MD, CE)  ***********************************************************
*****************************************************************************************************************************************************************

**************************************************************************** General ****************************************************************************

nbeads=4
# Total number of path integral beads per particle
# Minimum value: 1
# Is only relevant for MD simulations and CE

cell_dimensions_scaling_factor_L=2
cell_dimensions_scaling_factor_LS=2
cell_dimensions_scaling_factor_RLS=2
# This value will be used for the variables cell_dimensions_scaled_rounded and cell_dimensions_scaled_odd_rounded in the simulation software input files (e.g. cp2k)

signpostings_activate=true
# Possible values: false, true

signpostings_minimum_waiting_time=180
# Possible values: Positive integers including zero
# Unit: Seconds

signpostings_dispersion_time_maximum=180
# Possible values: Positive integers (excluding 0)
# Unit: Seconds


*************************************************************************** TD Cycles ***************************************************************************

tdw_count_total=4
# The total number of thermodynamic windows
# The following condition has to be satisfied: tdw_count_total = tdw_count_msp_transformation + tdw_count_es_transformation_initial + tdw_count_es_transformation_final
# Minimum value: 1

#tdcycle_es_transformation_type=hq
## Possible options: hq, lambda

tdw_count_es_transformation_initial=0
tdw_count_es_transformation_final=0
# Possible values: any positive int

tdc_es_tds_configurations_system1=1
tdc_es_tds_configurations_system2=1
# Possible values: Colon separated list of configurations (e.g. 1:0.5:0 if tdcycle_es_transformation_type=lambda or 0:2:4 if tdcycle_es_transformation_type=hq)
# The number of values specified in both variables together has to be either
#         * equal to tdw_count_total + 1
#         * equal to tdw_count_es_transformation_initial/final
# Usually
#         * the first value for tdc_es_tds_configurations_system1 and the last value of tdc_es_tds_configurations_system2 are set to 1
# Usually if the variables tdw_count_es_transformation_initial/final have the length tdw_count_total then
#         * the number of different values for system 1 equals
#         * the number of different values for system 2 equals tdw_count_es_transformation_final + 1
#         * the values for system 1 change at the beginning during the first tdw_count_es_transformation_initial + 1 indices
#         * the values for system 2 change at the end during the last tdw_count_es_transformation_final + 1 indices
## If tdcycle_es_transformation_type is set to
##           * lambda, then each configuration is a floating point number representing a scaling factor
##           * hq, then each configuration is a non-negative integer representing the number of beads for which the es transformation (with scaling factor 0) should be applied
# The order of values specified corresponds to the direction from the starting state (TDS 1) to the final state (last TDS)

es_transformation_atoms_to_transform=dawn
# Possible values:
# * dao : dummy atoms only
# * dawn : dummy atoms with neighbors (directly bonded atoms)
# * ligand : (the entire) ligand

tdcycle_msp_transformation_type=hq
# Possible options: hq, lambda
# If using lambda, use the same input file for cp2k with the ending lambda in the variables below for cp2k, for both the sys1 and sys2 files (Todo : improve description)

tdw_count_msp_transformation=4
# The total number of thermodynamic windows during which the two molecular systems are transformed into each other
# Minimum value: 1

tdcycle_si_activate=true
# Possible values: true, false

tdcycle_si_hydrogen_single_step=false
# Possible values: true, false
# Only relevant if tdcycle_si_activate=true

tdcycle_si_separate_neighbors=true
# Possible values: true, false
# Only relevant if tdcycle_si_activate=true

tdcycle_si_consider_branches=true
# Possible values: true, false
# Only relevant if tdcycle_si_activate=true


****************************************************************************** CP2K *****************************************************************************

# At least one of the two CP2K input folders for each GEO_OPT, EQ, MD and CE has to contain the following files:
# When used for GEO_OPT:
# * main.opt.lambda
# * main.opt.sys1
# * main.opt.sys2
# When used for EQ:
# * main.eq.lambda
# * main.eq.sys1
# * main.eq.sys2
# When used for MD simulations:
# * main.ipi.lambda
# * main.ipi.sys1
# * main.ipi.sys2
# Optional for GEO_OPT, EQ, MD, and CE are files of the form sub.*
# Possible variables in the cp2k input files: cell_dimensions_full_rounded, cell_dimensions_half_rounded, cell_dimensions_odd_rounded, tdsname, lambda_value

# Ligand (L) input folder
inputfolder_cp2k_opt_general_L=hqf.general.type1
inputfolder_cp2k_eq_general_L=hqf.general.type1
inputfolder_cp2k_md_general_L=hqf.general.type1
inputfolder_cp2k_ce-bp_general_L=hqf.general.type1
inputfolder_cp2k_opt_specific_L=hqf.specific.MM
inputfolder_cp2k_eq_specific_L=hqf.specific.MM
inputfolder_cp2k_md_specific_L=hqf.specific.MM
inputfolder_cp2k_ce-high_specific_L=hqf.specific.MM
# the ce-high folders are only used during the CE if the free energy method is a two level method (NBB,

# Ligand, solvent (LS) input folder
inputfolder_cp2k_opt_general_LS=hqf.general.type1
inputfolder_cp2k_eq_general_LS=hqf.general.type1
inputfolder_cp2k_md_general_LS=hqf.general.type1
inputfolder_cp2k_ce_general_LS=hqf.general.type1
inputfolder_cp2k_opt_specific_LS=hqf.specific.MM
inputfolder_cp2k_eq_specific_LS=hqf.specific.MM
inputfolder_cp2k_md_specific_LS=hqf.specific.MM
inputfolder_cp2k_ce-bp_specific_LS=hqf.specific.MM

# Protein, ligand, solvent (RLS) input folder
inputfolder_cp2k_opt_general_RLS=hqf.general.type1
inputfolder_cp2k_eq_general_RLS=hqf.general.type1
inputfolder_cp2k_md_general_RLS=hqf.general.type1
inputfolder_cp2k_ce_general_RLS=hqf.general.type1
inputfolder_cp2k_opt_specific_RLS=hqf.specific.MM
inputfolder_cp2k_eq_specific_RLS=hqf.specific.MM
inputfolder_cp2k_md_specific_RLS=hqf.specific.MM
inputfolder_cp2k_ce-bp_specific_RLS=hqf.specific.MM

cp2k_random_seed=random
# Possible values: random, <integer>
# Sets the seed of the prng in the cp2k main input files (opt and eq)
# If an integer is specified, it will be used as the random seed
# If 'random' is specified, a random integer will be generated and used (recommended). This can be useful in particular when a simulation crashes during the run and has to be restarted.

cp2k_command=cp2k-5.1.sopt
#cp2k-5.1.sopt
#cp2k_command=/home/wagner/cgorgulla/Dropbox/Software/installed/bin/cp2k.ssmp 
#cp2k_command=/programs/x86_64-linux/cp2k/4.1/exe/Linux-x86-64-gfortran/cp2k.ssmp
#cp2k_command=/nmr/programs/cp2k-4.1/cp2k.popt


****************************************************************************** i-PI *****************************************************************************

# Ligand (L) input files
inputfile_ipi_md_L=ipi.in.md.nvt.xml
inputfile_ipi_ce_L=ipi.in.ce.cp2k.xml

# Ligand, solvent (LS) input files
inputfile_ipi_md_LS=ipi.in.md.nvt.xml
inputfile_ipi_ce_LS=ipi.in.ce.cp2k.xml

# Protein, ligand, solvent (RLS) input files
inputfile_ipi_md_RLS=ipi.in.md.nvt.xml
inputfile_ipi_ce_RLS=ipi.in.ce.cp2k.xml

ipi_set_randomseed=true
# Possible values: true, false
# Replaces the seed of the prng in the i-pi input files with a random number


****************************************************************************** i-QI *****************************************************************************

# Ligand (L) input files
inputfile_iqi_md_L=
inputfile_iqi_constraints_L=
# Normally not needed because iqi is usually not used for L only simulations

# Ligand, solvent (LS) input files
inputfile_iqi_md_LS=iqi.in.main.LS.xml
inputfile_iqi_constraints_LS=iqi.in.sub.constraints.LS.xml

# Protein, ligand, solvent (RLS) input files
inputfile_iqi_md_RLS=iqi.in.main.RLS.xml
inputfile_iqi_constraints_RLS=iqi.in.sub.constraints.RLS.xml


********************************************************************* Geometry Optimization *********************************************************************

opt_continue=true
# Possible values (case insensitive): true, false
# If true, then
#   * during _pro_
#       * non-existent TDS-folders will be newly created
#       * and existing TDS-folders which contain already restart files will be prepared for the next run provided the there are no opt-pp-files for this TDS yet, in which case it will be skipped
#       * the general MSP folder will only be newly prepared if at least one of the files system.a1c1.[uc]-atoms is present
#   * during _rop_
#       * the simulation will only be started if there are no opt-pp-files yet for this TDS
#   * during _ppo_
#       * the pp  will only be carried out if there are no opt-pp-files yet for this TDS
# If false, then
#   * during _pro_
#       * the opt/msp_name/subsystem general folder will be newly prepared
#       * each TDS folder will be newly prepared (and wiped if existent)
# If the input files have changed and should be updated, this setting should be set either to false, otherwise one needs to delete the folders which should be newly prepared

opt_programs_L=cp2k
opt_programs_LS=cp2k
opt_programs_RLS=cp2k
# possible: cp2k

opt_max_steps_L=500
opt_max_steps_LS=500
opt_max_steps_RLS=500
# Input files for the simulations are adjusted automatically by replacing the term 'opt_max_steps_placeholder'

opt_trajectory_stride_L=10
opt_trajectory_stride_LS=10
opt_trajectory_stride_RLS=10
# Input files for the simulations are adjusted automatically by replacing the term 'opt_trajectory_stride_placeholder'

opt_restart_stride_L=100
opt_restart_stride_LS=100
opt_restart_stride_RLS=100
# Input files for the simulations are adjusted automatically by replacing the term 'opt_restart_stride_placeholder'

opt_type_L=MM
opt_type_LS=MM
opt_type_RLS=MM
# Possible values: MM, QM, QMMM
# Currently obsolete

opt_timeout_L=100
opt_timeout_LS=100
opt_timeout_RLS=100
# Unit: seconds
# This value is used to detect whether the optimization is completed by checking if the file is still changing or not,
# because sometimes a program (in particular CP2K is done but the program doesn't terminate)


******************************************************************* Equilibration Simulations *******************************************************************

eq_activate=true
# Possible values: true, false
# If false, _pmd_ will use the optimization output files, and _eq_ will not be run in hq-pipes
# If true, _pmd_ will use the equilibration output files, and _eq_ can be run in hq-pipes

eq_continue=true
# Possible values: true, false
# Details: Same as for opt_continue

eq_programs_L=cp2k
eq_programs_LS=cp2k
eq_programs_RLS=cp2k
# possible: cp2k

eq_type_L=MM
eq_type_LS=MM
eq_type_RLS=MM
# Possible values: MM, QM, QMMM
# Currently obsolete

eq_total_steps_L=100000
eq_total_steps_LS=100000
eq_total_steps_RLS=100000
# Input files for the simulations are adjusted automatically by replacing the term 'eq_total_steps_placeholder'

eq_trajectory_stride_L=1000
eq_trajectory_stride_LS=1000
eq_trajectory_stride_RLS=1000
# The stride w.r.t. the time steps when snapshot files are written out
# Input files for the simulations are adjusted automatically by replacing the term 'eq_trajectory_stride_placeholder'

eq_restart_stride_L=1000
eq_restart_stride_LS=1000
eq_restart_stride_RLS=1000
# The stride w.r.t. the time steps when restart files are written out
# Input files for the simulations are adjusted automatically by replacing the term 'eq_restart_stride_placeholder'

eq_timeout_L=100
eq_timeout_LS=100
eq_timeout_RLS=100
# Unit: seconds
# This value is used to detect whether the equilibration is completed by checking if the file is still changing or not,
# because sometimes a program (in particular CP2K is done but the program doesn't terminate)


************************************************************************* MD Simulations ************************************************************************

md_continue=true
# Possible values (case insensitive): true, false
# If true, then during _prm_ non-existent MD-folders will be newly created, and existing ones which have already ipi restart files will be prepared for the next run (without deleting the previous runs)
# If false, then the md/msp_name/subsystem will be newly prepared (and will be wiped if already existent)
# If the input files have changed and should be updated, this setting should be set either to false, otherwise one needs to delete the folders which should be newly prepared
# This setting has mainly effects on _prm_, only very few on _rmd_

md_programs_L=ipi-cp2k
md_programs_LS=ipi-cp2k
md_programs_RLS=ipi-cp2k
# Possible values: ipi-cp2k, ipi-cp2k-iqi
# Will also be used for the CE (due to the restart files requiring the same clients)

md_type_L=MM
md_type_LS=MM
md_type_RLS=MM
# Possible values: QMMM, MM, QM
# Currently obsolete

md_total_steps_L=100000000
md_total_steps_LS=100000000
md_total_steps_RLS=100000000
# Input files for the simulations are adjusted automatically by replacing the term 'md_total_steps_placeholder'

md_restart_stride_L=1000
md_restart_stride_LS=1000
md_restart_stride_RLS=1000
# The stride w.r.t. the time steps during the MD simulations when restart/property/cell files are written out for the later CEs
# Input files for the simulations are adjusted automatically by replacing the term 'md_restart_stride_placeholder' (should be used at least for the above mentioned three types of files)

md_trajectory_centroid_stride_L=10000
md_trajectory_centroid_stride_LS=10000
md_trajectory_centroid_stride_RLS=10000
# The stride w.r.t. the time steps during the MD simulations when trajectory files for the centroids are written out
# Input files for the simulations are adjusted automatically by replacing the term 'md_trajectory_centroid_stride_placeholder'

md_trajectory_beads_stride_L=10000
md_trajectory_beads_stride_LS=10000
md_trajectory_beads_stride_RLS=10000
# The stride w.r.t. the time steps during the MD simulations when trajectory files for the beads are written out
# Input files for the simulations are adjusted automatically by replacing the term 'md_trajectory_beads_stride_placeholder'

md_forces_stride_L=10000
md_forces_stride_LS=10000
md_forces_stride_RLS=10000
# The stride w.r.t. the time steps during the MD simulations when force files are written out
# Input files for the simulations are adjusted automatically by replacing the term 'md_forces_stride_placeholder'

md_keep_logfiles=false
# Possible values: false, true
# true: Default output files are kept
# false: No screen and related output files are kept
# Does not affect the verbosity settings of the simulation input files

md_timeout_L=1000
md_timeout_LS=1000
md_timeout_RLS=1000
# Here should be taken into account that between the start of i-pi and CP2K there can be a time delay of a few seconds (usually around 5 seconds)
# Timeout starts counting after CP2K (and possibly iqi) has been started


*********************************************************************** Cross-Evaluations ***********************************************************************

ce_continue=true
# Possible values (case insensitive): true, false
# If true, then * during _rce_ snapshots will be skipped for which the file ipi.out.properties already exists and contains a line with property values
#               * during _prc_ only snapshots will be prepared which are not already prepared (e.g. no finished snapshots will be overwritten)
# If false, then * during _rce_ every snapshot will be computed regardless of whether they have been computed before or not
#                * during _prc_ all snapshots will be newly prepared (and the ce/msp_name/subsystem folder will be wiped if already existent)
# If the input files have changed and should be updated, this setting should be set either to false, otherwise one needs to delete the folders which should be newly prepared

ce_verbosity=normal
# Possible values: normal, debug
# normal: Only essential output files of the simulation programs (i-Pi, CP2K, i-QI) are kept
# debug: All the simulation output files are kept (not recommended for large scale production runs)

ce_type_L=MM
ce_type_LS=MM
ce_type_RLS=MM
# If umbrella_sampling=false, then this setting should be the same as md_type (since the MD files are copied)
# Possible values: QMMM, MM, QM
# Currently obsolete

ce_first_restart_ID_L=1
ce_first_restart_ID_LS=1
ce_first_restart_ID_RLS=1

ce_stride_L=1
ce_stride_LS=1
ce_stride_RLS=1
# The stride which is applied during the CE, i.e. only every <stride_ce>th restart file of ipi from the MD simulations is used for the CEs
# The restart files are indexed starting at one (1, 2, 3, ...)

ce_timeout_L=100
ce_timeout_LS=100
ce_timeout_RLS=100
# Here should be taken into account that between the start of i-pi and CP2K there can be a time delay of a few seconds (usually around 5 seconds, but sometimes up to hundreds of seconds, either due to overloaded systems or because CP2k hangs in the beginning which sometimes happens)
# Timeout starts counting after CP2K (and possibly iqi) has been started
# The snapshot run will terminate as soon as the result is there, not until the timeout is reached


****************************************************************************** FEC ******************************************************************************

fec_method=BAR
# Possible values: BAR, NBB-D, NBB-I
# These setting will affect the cross evaluations and the free energy computations

fec_first_snapshot_index_L=1
fec_first_snapshot_index_LS=1
fec_first_snapshot_index_RLS=1
fec_stride_L=1
fec_stride_LS=1
fec_stride_RLS=1
# The stride which is applied before carrying out the FEC, i.e. only every <stride_fec>th snapshots of the cross evaluation is used
# The snapshot folder in the cross evaluation folders are indexed starting by 1

C_absolute_tolerance=0.1
delta_F_min=-1000
delta_F_max=1000


************************************************************************ Parallelization ************************************************************************

ncpus_cp2k_opt_L=1
ncpus_cp2k_opt_LS=1
ncpus_cp2k_opt_RLS=1
ncpus_cp2k_eq_L=1
ncpus_cp2k_eq_LS=1
ncpus_cp2k_eq_RLS=1
ncpus_cp2k_md_L=1
ncpus_cp2k_md_LS=1
ncpus_cp2k_md_RLS=1
ncpus_cp2k_ce_L=1
ncpus_cp2k_ce_LS=1
ncpus_cp2k_ce_RLS=1

fes_opt_parallel_max_L=10
fes_opt_parallel_max_LS=10
fes_opt_parallel_max_RLS=10
fes_eq_parallel_max_L=10
fes_eq_parallel_max_LS=10
fes_eq_parallel_max_RLS=10
fes_md_parallel_max_L=10
fes_md_parallel_max_LS=10
fes_md_parallel_max_RLS=10
fes_ce_parallel_max_L=1
fes_ce_parallel_max_LS=1
fes_ce_parallel_max_RLS=1

command_prefix_bs_subjob=srun -N 1 -n 1
# Cray/HLRN: aprun -cc none -n 1
# Slurm: srun -N 1 -n 1
command_prefix_bs_task=bash
command_prefix_gen_run_one_pipe_sub=bash
command_prefix_opt_run_one_opt=bash
command_prefix_eq_run_one_eq=bash
command_prefix_md_run_one_md=bash
command_prefix_ce_run_one_snapshot=bash
# Can contain spaces, e.g. options to the prefix command
# Common prefixes are: bash, aprun, setsid, ...
# Should not be empty. 'bash' can be used if no other prefix is needed for a bash script for instance
# setsid ist not needed for command_prefix_bs_task, because the tasks are automatically run in their own process groups and setsid would therefore not have much effect


************************************************************************** Batchsystem **************************************************************************

batchsystem=slurm
# Supported: lsf, slurm, sge, mtp (for MOAB/torque/pbs)

tasks_parallel_delay_time=10
# Possible values: Non-negative integer
# Unit: Seconds
# Summary:  The waiting time before the next task of the same subjob file is started. This is useful if different tasks are preparing files in the same directory
#           (usually common files for the same MSP) to avoid race conditions which can cause HyperQ to fail
#           The value is used during the job creation with hq_bs_prepare_jobfiles.sh
# Recommended value: At least 10 seconds

minimum_task_time=5
# Possible values: Positive integer
# Unit: Seconds
# If the runtime of the tasks of a subjob is less than the minimum_task_time for at least one of the tasks, an internal error is raised.
# The task_parallel_delay_time is not counted as runtime of the tasks
# Useful for detecting immediate failures (preventing of the start of the task at all). We cannot rely on the exit codes of the tasks.
# Recommended value: 5 seconds (each hqf_gen_run_one_pipe.sh runs at least for 15 seconds due to a short initial sleep)