#!/usr/bin/env bash
# ---------------------------------------------------------------------------
#
# PBS/Moab Settings
###############################################################################
#PBS -N runtimeletter-job_id_placeholder
#PBS -l nodes=1:ppn=24
#PBS -l naccesspolicy=singlejob
#PBS -o batchsystem/output-files/task-job_id_placeholder.job-${PBS_JOBID}.out
#PBS -e batchsystem/output-files/task-job_id_placeholder.job-${PBS_JOBID}.out
#PBS -l walltime=00:12:00
##PBS -A bec00123
#PBS -q mpp2testq
#PBS -m a
#PBS -M silmaril@zedat.fu-berlin.de
#PBS -l signal=10@300 

# Job Information
##################################################################################

echo
echo "                    *** Job Information ***                    "
echo "==============================================================="
echo 
echo "Environment variables"
echo "------------------------"
env
echo
echo
echo "*** Job Infos by checkjob and qstat -f"
echo "--------------------------------------------------"
checkjob $PBS_JOBID
qstat -f $PBS_JOBID

# Running the Job - Screening of the Ligands
######################################################################
echo
echo "                    *** Job Output ***                    "
echo "==========================================================="
echo

# Functions
# Standard error response 
error_response_std() {
    echo "Error was trapped" 1>&2
    echo "Error in bash script $0" 1>&2
    echo "Error on line $1" 1>&2
    echo "Environment variables" 1>&2 
    echo "----------------------------------" 1>&2
    env 1>&2
}
trap 'error_response_std $LINENO' ERR

# Handling signals
time_near_limit() {
    echo "The script ${BASH_SOURCE[0]} caught a time limit signal. Trying to start a new job."
}
trap 'time_near_limit' 10

termination_signal() {
    echo "The script ${BASH_SOURCE[0]} caught a termination signal. Stopping job."
    exit 1
}
trap 'termination_signal' 1 2 3 9 12 15

# Printing final job information
print_job_infos_end() {
    # Job information
    echo
    echo "                     *** Final Job Information ***                    "
    echo "======================================================================"
    echo
    echo "Starting time:" $STARTINGTIME
    echo "Ending time:  " $(date)
    echo
}

# Work to be done by the job
command_placeholder

# Printing final information
print_job_infos_end
